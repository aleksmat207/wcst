
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using wcstApp.Common;

namespace wcstApp.Services.CardService
{
    public class CardService: ICardService
    {
        private readonly HttpContext _httpContext;

        public CardService( IHttpContextAccessor httpContextAccessor)
        {
            _httpContext = httpContextAccessor.HttpContext;
        }
        public async Task <JContainer> SendStartingCards()
        {
            return new
            {
                imgbase= "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAyMi4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIg0KCSBpZD0ic3ZnMzAzNSIgaW5rc2NhcGU6dmVyc2lvbj0iMC40OC4yIHI5ODE5IiBzb2RpcG9kaTpkb2NuYW1lPSIzY2lyY2xlWWVsbG93LnN2ZyIgeG1sbnM6Y2M9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zIyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciDQoJIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgNTk1LjMgODQxLjkiDQoJIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDU5NS4zIDg0MS45OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KCS5zdDB7ZmlsbDojMDAwMEZGO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoyLjA4MzY7fQ0KPC9zdHlsZT4NCjxzb2RpcG9kaTpuYW1lZHZpZXcgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IiBib3JkZXJvcGFjaXR5PSIxLjAiIGlkPSJiYXNlIiBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJsYXllcjEiIGlua3NjYXBlOmN4PSItMzI4Ljk2MjM1IiBpbmtzY2FwZTpjeT0iNjY3LjM0Mzk0IiBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0ibW0iIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwLjAiIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiIGlua3NjYXBlOnNuYXAtZ2xvYmFsPSJmYWxzZSIgaW5rc2NhcGU6c25hcC1vYmplY3QtbWlkcG9pbnRzPSJ0cnVlIiBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSI5NzEiIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTY4MCIgaW5rc2NhcGU6d2luZG93LXg9IjE5MTEiIGlua3NjYXBlOndpbmRvdy15PSIxNiIgaW5rc2NhcGU6em9vbT0iMC40OTQ5NzQ3NSIgcGFnZWNvbG9yPSIjZmZmZmZmIiBzaG93Z3JpZD0idHJ1ZSI+DQoJPGlua3NjYXBlOmdyaWQgIGlkPSJncmlkMzA0NiIgdHlwZT0ieHlncmlkIj48L2lua3NjYXBlOmdyaWQ+DQo8L3NvZGlwb2RpOm5hbWVkdmlldz4NCjxwYXRoIGlkPSJwYXRoMzA0MSIgc29kaXBvZGk6Y3g9IjM3NC4yODU3MSIgc29kaXBvZGk6Y3k9IjUyNi42NDc4OSIgc29kaXBvZGk6cng9IjEyMCIgc29kaXBvZGk6cnk9IjExNy4xNDI4NSIgc29kaXBvZGk6dHlwZT0iYXJjIiBjbGFzcz0ic3QwIiBkPSINCglNNTU1LjMsMjc1LjljMCw2MC45LTUwLjUsMTEwLjItMTEyLjksMTEwLjJjLTYyLjMsMC0xMTIuOS00OS4zLTExMi45LTExMC4yUzM4MCwxNjUuNyw0NDIuNCwxNjUuN1M1NTUuMywyMTUsNTU1LjMsMjc1LjkNCglMNTU1LjMsMjc1Ljl6Ii8+DQo8cGF0aCBpZD0icGF0aDMwNDEtNSIgc29kaXBvZGk6Y3g9IjM3NC4yODU3MSIgc29kaXBvZGk6Y3k9IjUyNi42NDc4OSIgc29kaXBvZGk6cng9IjEyMCIgc29kaXBvZGk6cnk9IjExNy4xNDI4NSIgc29kaXBvZGk6dHlwZT0iYXJjIiBjbGFzcz0ic3QwIiBkPSINCglNNTU1LjMsNTY1LjljMCw2MC45LTUwLjUsMTEwLjItMTEyLjksMTEwLjJjLTYyLjMsMC0xMTIuOS00OS4zLTExMi45LTExMC4yUzM4MCw0NTUuNyw0NDIuNCw0NTUuN1M1NTUuMyw1MDUsNTU1LjMsNTY1LjkNCglMNTU1LjMsNTY1Ljl6Ii8+DQo8cGF0aCBpZD0icGF0aDMwNDEtMiIgc29kaXBvZGk6Y3g9IjM3NC4yODU3MSIgc29kaXBvZGk6Y3k9IjUyNi42NDc4OSIgc29kaXBvZGk6cng9IjEyMCIgc29kaXBvZGk6cnk9IjExNy4xNDI4NSIgc29kaXBvZGk6dHlwZT0iYXJjIiBjbGFzcz0ic3QwIiBkPSINCglNMjY1LjcsMjc1LjljMCw2MC45LTUwLjUsMTEwLjItMTEyLjksMTEwLjJjLTYyLjMsMC0xMTIuOS00OS4zLTExMi45LTExMC4yczUwLjUtMTEwLjIsMTEyLjktMTEwLjJTMjY1LjcsMjE1LDI2NS43LDI3NS45DQoJTDI2NS43LDI3NS45eiIvPg0KPHBhdGggaWQ9InBhdGgzMDQxLTEiIHNvZGlwb2RpOmN4PSIzNzQuMjg1NzEiIHNvZGlwb2RpOmN5PSI1MjYuNjQ3ODkiIHNvZGlwb2RpOnJ4PSIxMjAiIHNvZGlwb2RpOnJ5PSIxMTcuMTQyODUiIHNvZGlwb2RpOnR5cGU9ImFyYyIgY2xhc3M9InN0MCIgZD0iDQoJTTI2NS43LDU2NS45YzAsNjAuOS01MC41LDExMC4yLTExMi45LDExMC4yYy02Mi4zLDAtMTEyLjktNDkuMy0xMTIuOS0xMTAuMnM1MC41LTExMC4yLDExMi45LTExMC4yUzI2NS43LDUwNSwyNjUuNyw1NjUuOQ0KCUwyNjUuNyw1NjUuOXoiLz4NCjwvc3ZnPg0K"
            }.AsJContainer();
            return new
            {
                imgbase = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAyMi4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIg0KCSBpZD0ic3ZnMzAzNSIgaW5rc2NhcGU6dmVyc2lvbj0iMC40OC4yIHI5ODE5IiBzb2RpcG9kaTpkb2NuYW1lPSIxc3RhckdyZWVuLnN2ZyIgeG1sbnM6Y2M9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zIyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciDQoJIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgNTk1LjMgODQxLjkiDQoJIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDU5NS4zIDg0MS45OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KCS5zdDB7ZmlsbDojRkZGRjAwO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxLjE1OTc7c3Ryb2tlLW1pdGVybGltaXQ6My41O30NCjwvc3R5bGU+DQo8c29kaXBvZGk6bmFtZWR2aWV3ICBib3JkZXJjb2xvcj0iIzY2NjY2NiIgYm9yZGVyb3BhY2l0eT0iMS4wIiBpZD0iYmFzZSIgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ibGF5ZXIxIiBpbmtzY2FwZTpjeD0iLTIxNS4wNTg3OSIgaW5rc2NhcGU6Y3k9IjE5My4yMjE4NSIgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9Im1tIiBpbmtzY2FwZTpwYWdlb3BhY2l0eT0iMC4wIiBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIiBpbmtzY2FwZTpzbmFwLWdsb2JhbD0iZmFsc2UiIGlua3NjYXBlOnNuYXAtb2JqZWN0LW1pZHBvaW50cz0idHJ1ZSIgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTAwMSIgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIxOTIwIiBpbmtzY2FwZTp3aW5kb3cteD0iLTkiIGlua3NjYXBlOndpbmRvdy15PSItOSIgaW5rc2NhcGU6em9vbT0iMC40MzQxOTc5OCIgcGFnZWNvbG9yPSIjZmZmZmZmIiBzaG93Z3JpZD0idHJ1ZSI+DQoJPGlua3NjYXBlOmdyaWQgIGlkPSJncmlkMzA0NiIgdHlwZT0ieHlncmlkIj48L2lua3NjYXBlOmdyaWQ+DQo8L3NvZGlwb2RpOm5hbWVkdmlldz4NCjxnIGlkPSJsYXllcjEiIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiIGlua3NjYXBlOmxhYmVsPSJMYXllciAxIj4NCgkNCgkJPHBhdGggaWQ9InBhdGgzNzk3IiBpbmtzY2FwZTpmbGF0c2lkZWQ9ImZhbHNlIiBpbmtzY2FwZTpyYW5kb21pemVkPSIwIiBpbmtzY2FwZTpyb3VuZGVkPSIwLjIiIGlua3NjYXBlOnRyYW5zZm9ybS1jZW50ZXIteD0iLTE1LjE5ODc0NSIgaW5rc2NhcGU6dHJhbnNmb3JtLWNlbnRlci15PSItMS4xODE3NzQiIHNvZGlwb2RpOmFyZzE9IjAuNzg1OTQyMTUiIHNvZGlwb2RpOmFyZzI9IjEuNjEzMzI0MiIgc29kaXBvZGk6Y3g9IjU0LjE0ODgwNCIgc29kaXBvZGk6Y3k9IjIxMi4wNjM5MyIgc29kaXBvZGk6cjE9Ijc2LjU1NzUyNiIgc29kaXBvZGk6cjI9IjEzLjI4ODEzMyIgc29kaXBvZGk6c2lkZXM9IjQiIHNvZGlwb2RpOnR5cGU9InN0YXIiIGNsYXNzPSJzdDAiIGQ9Ig0KCQlNMzM2LjMsNjUzYy0xOC43LTIwLjQsODIuOS04My4yLDgyLjktMTEwLjljMC0yNy4zLTEwMi45LTkwLjItODIuOC0xMDguN2MyMC40LTE4LjcsODMuMiw4Mi45LDExMC45LDgyLjkNCgkJYzI3LjMsMCw5MC4yLTEwMi45LDEwOC43LTgyLjhjMTguNywyMC40LTgyLjksODMuMi04Mi45LDExMC45YzAsMjcuMywxMDIuOSw5MC4yLDgyLjgsMTA4LjdjLTIwLjQsMTguNy04My4yLTgyLjktMTEwLjktODIuOQ0KCQlDNDE3LjcsNTcwLjIsMzU0LjgsNjczLjEsMzM2LjMsNjUzeiIvPg0KPC9nPg0KPGcgaWQ9ImxheWVyMV8xXyIgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciIgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiPg0KCQ0KCQk8cGF0aCBpZD0icGF0aDM3OTdfMV8iIGlua3NjYXBlOmZsYXRzaWRlZD0iZmFsc2UiIGlua3NjYXBlOnJhbmRvbWl6ZWQ9IjAiIGlua3NjYXBlOnJvdW5kZWQ9IjAuMiIgaW5rc2NhcGU6dHJhbnNmb3JtLWNlbnRlci14PSItMTUuMTk4NzQ1IiBpbmtzY2FwZTp0cmFuc2Zvcm0tY2VudGVyLXk9Ii0xLjE4MTc3NCIgc29kaXBvZGk6YXJnMT0iMC43ODU5NDIxNSIgc29kaXBvZGk6YXJnMj0iMS42MTMzMjQyIiBzb2RpcG9kaTpjeD0iNTQuMTQ4ODA0IiBzb2RpcG9kaTpjeT0iMjEyLjA2MzkzIiBzb2RpcG9kaTpyMT0iNzYuNTU3NTI2IiBzb2RpcG9kaTpyMj0iMTMuMjg4MTMzIiBzb2RpcG9kaTpzaWRlcz0iNCIgc29kaXBvZGk6dHlwZT0ic3RhciIgY2xhc3M9InN0MCIgZD0iDQoJCU0zOS4zLDY1M2MtMTguNy0yMC40LDgyLjktODMuMiw4Mi45LTExMC45YzAtMjcuMy0xMDIuOS05MC4yLTgyLjgtMTA4LjdjMjAuNC0xOC43LDgzLjIsODIuOSwxMTAuOSw4Mi45DQoJCWMyNy4zLDAsOTAuMi0xMDIuOSwxMDguNy04Mi44YzE4LjcsMjAuNC04Mi45LDgzLjItODIuOSwxMTAuOWMwLDI3LjMsMTAyLjksOTAuMiw4Mi44LDEwOC43Yy0yMC40LDE4LjctODMuMi04Mi45LTExMC45LTgyLjkNCgkJQzEyMC43LDU3MC4yLDU3LjgsNjczLjEsMzkuMyw2NTN6Ii8+DQo8L2c+DQo8ZyBpZD0ibGF5ZXIxXzJfIiBpbmtzY2FwZTpncm91cG1vZGU9ImxheWVyIiBpbmtzY2FwZTpsYWJlbD0iTGF5ZXIgMSI+DQoJDQoJCTxwYXRoIGlkPSJwYXRoMzc5N18yXyIgaW5rc2NhcGU6ZmxhdHNpZGVkPSJmYWxzZSIgaW5rc2NhcGU6cmFuZG9taXplZD0iMCIgaW5rc2NhcGU6cm91bmRlZD0iMC4yIiBpbmtzY2FwZTp0cmFuc2Zvcm0tY2VudGVyLXg9Ii0xNS4xOTg3NDUiIGlua3NjYXBlOnRyYW5zZm9ybS1jZW50ZXIteT0iLTEuMTgxNzc0IiBzb2RpcG9kaTphcmcxPSIwLjc4NTk0MjE1IiBzb2RpcG9kaTphcmcyPSIxLjYxMzMyNDIiIHNvZGlwb2RpOmN4PSI1NC4xNDg4MDQiIHNvZGlwb2RpOmN5PSIyMTIuMDYzOTMiIHNvZGlwb2RpOnIxPSI3Ni41NTc1MjYiIHNvZGlwb2RpOnIyPSIxMy4yODgxMzMiIHNvZGlwb2RpOnNpZGVzPSI0IiBzb2RpcG9kaTp0eXBlPSJzdGFyIiBjbGFzcz0ic3QwIiBkPSINCgkJTTE4Ny44LDM5MC4yYy0xOC43LTIwLjQsODIuOS04My4yLDgyLjktMTEwLjljMC0yNy4zLTEwMi45LTkwLjItODIuOC0xMDguN2MyMC40LTE4LjcsODMuMiw4Mi45LDExMC45LDgyLjkNCgkJYzI3LjMsMCw5MC4yLTEwMi45LDEwOC43LTgyLjhjMTguNywyMC40LTgyLjksODMuMi04Mi45LDExMC45YzAsMjcuMywxMDIuOSw5MC4yLDgyLjgsMTA4LjdjLTIwLjQsMTguNy04My4yLTgyLjktMTEwLjktODIuOQ0KCQlDMjY5LjIsMzA3LjQsMjA2LjMsNDEwLjMsMTg3LjgsMzkwLjJ6Ii8+DQo8L2c+DQo8L3N2Zz4NCg=="
            }.AsJContainer();
           
        }
        public async Task <dynamic> GetStartingCards()
        {
            WebRequest wr = WebRequest.Create("http://localhost:59308/api/Card/send");
            WebResponse res = wr.GetResponse();
            dynamic images;
            using (StreamReader reader = new StreamReader(res.GetResponseStream()))
            {
                string json = reader.ReadToEnd();
               images = JsonConvert.DeserializeObject(json);
                //  this.pictureBox1.Load(images["0"].imglink.Value);
            }
            // return images["0"].imglink.Value;
            return images.imgbase;
        }
        public async Task <dynamic> GetRandomCard()
        {
            //Random rand = new Random();
            //int toSkip = rand.Next(1, 64);
            WebRequest wr = WebRequest.Create("");
            WebResponse res = wr.GetResponse();
            dynamic images;
            using (StreamReader reader = new StreamReader(res.GetResponseStream()))
            {
                string json = reader.ReadToEnd();
                images = JsonConvert.DeserializeObject(json);
                //  this.pictureBox1.Load(images["0"].imglink.Value);
            }
            return images.imgbase;

        }
    }
}
